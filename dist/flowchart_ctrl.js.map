{"version":3,"sources":["../src/flowchart_ctrl.js"],"names":["MetricsPanelCtrl","_","unit","kbn","FlowChartCtrl","$scope","$injector","$rootScope","hiddenSeries","panelDefaults","forward","label","value","format","extendUnit","show","opposite","defaults","panel","events","on","onRender","bind","onDataReceived","onDataError","onInitEditMode","addEditorTab","unitFormats","getUnitFormats","subItem","type","formatValue","render","series","data","parseSeries","datapoints","length","checkSeries","targets","datapointsF","setData","datapointsO","seriesData","dataList","map","seriesHandler","scope","elem","$panelContainer","find","$flowPanel","$panelContent","css","offsetHeight","templateUrl"],"mappings":"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","file":"flowchart_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport unit from './unit';\nimport kbn from 'app/core/utils/kbn';\nimport './css/flow-panel.css!';\n\nexport class FlowChartCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n    this.hiddenSeries = {};\n\n    var panelDefaults = {\n\t  forward:{\n\t\t  label: '流入',\n\t\t  unit:'N/A',\n\t\t  value: '',\n\t\t  format: 'short',\n\t\t  extendUnit: '',\n\t\t  show: true\n\t  },\t\n\t  opposite:{\n\t\t  label: '流出',\n\t\t  unit:'N/A',\n\t\t  value: '',\n\t\t  format: 'short',\n\t\t  extendUnit: '',\n\t\t  show: true\t\t  \n\t  }\n    };\n\n    _.defaults(this.panel, panelDefaults);\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/grafana-flow-panel/editor.html', 2);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n  \n  setUnitFormat(subItem, type) {\t\n\tif(type == 'forward'){\n\t\tthis.panel.forward.format = subItem.value;\n\t\tthis.panel.forward.value = unit.formatValue(this.panel, this.panel.forward.value, subItem.value);\n\t}else{\n\t\tthis.panel.opposite.format = subItem.value;\n\t\tthis.panel.opposite.value = unit.formatValue(this.panel, this.panel.opposite.value, subItem.value);\n\t}\n    this.render();\n  }\n\n  onDataError() {\n    this.series = [];\n    this.render();\n  }\n\n  onRender() {\n    this.data = this.parseSeries(this.series);\n  }\n  \n  setData(datapoints, panel){\n\tif(datapoints.length > 0){\n\t\tpanel.value = datapoints[datapoints.length-1][0];\t\n\t\tpanel.value = unit.formatValue(panel, panel.value, panel.format);\n\t}else{\n\t\tpanel.value = 'N/A';\n\t}\n  }\n\n  parseSeries(series) {\t  \n\tif(series && series.length > 0){\n\t\tseries = unit.checkSeries(this.panel.targets, series);\n\t\tif(this.panel.forward.show){ \n\t\t\tlet datapointsF = series[0].datapoints; \n\t\t\tthis.setData(datapointsF, this.panel.forward);\n\t\t}\n\t\tif(this.panel.forward.show && this.panel.opposite.show){\n\t\t\tif(series[1] && series[1].datapoints){\n\t\t\t\tlet datapointsO = series[1].datapoints;  \n                this.setData(datapointsO, this.panel.opposite);\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tif(!this.panel.forward.show && this.panel.opposite.show){\n\t\t\tlet datapointsO = series[0].datapoints;  \n\t\t\tthis.setData(datapointsO, this.panel.opposite);\t\n\t\t}\n\t}else{\n\t\tthis.setData([], this.panel.forward);\n\t\tthis.setData([], this.panel.opposite);\n\t}\n  }\n  \n  seriesHandler(seriesData) {\n\treturn seriesData;\n  }\n\n  onDataReceived(dataList) {\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    this.data = this.parseSeries(this.series);\n    this.render(this.data);\n  }\n  \n  link(scope, elem) {\n\tthis.events.on('render', () => {\n\t    const $panelContainer = elem.find('.panel-container');\n\t    const $flowPanel = elem.find('.flow-panel');\n\t\tconst $panelContent = elem.find('.panel-content');\n\t\t$panelContent.css('paddingLeft','0px');\n\t\t$panelContent.css('paddingRight','0px');\n\t\t$flowPanel.css('height', ($panelContainer[0].offsetHeight-40)+'px');\n\t});\n  }\n}\n\nFlowChartCtrl.templateUrl = 'module.html';\n"]}